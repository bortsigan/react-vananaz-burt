{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      emailErrorClass: 'd-none',\n      emailErrorMessage: '',\n      passwordErrorClass: 'd-none',\n      passwordErrorMessage: '',\n      btnClass: 'btn btn-lg btn-signin btn-block'\n    };\n    _this.emailClass = \"\";\n    _this.emailMessage = \"\";\n    _this.isEmailError = false;\n    _this.passwordClass = \"\";\n    _this.passwordMessage = \"\";\n    _this.isPasswordError = false;\n    _this.submitLoginForm = _this.submitLoginForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"submitLoginForm\",\n    value: function submitLoginForm(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var fields = document.querySelectorAll('input');\n      fields.forEach(function (field) {\n        if (field.name == \"email\") {\n          // validate email\n          if (!field.name.valid) {\n            if (field.validity.valueMissing) {\n              // if error\n              _this2.isEmailError = true;\n              _this2.emailMessage = \"Input form is empty\";\n            } else if (field.validity.typeMismatch) {\n              // if error\n              _this2.isEmailError = true;\n              _this2.emailMessage = \"Email text isn't email form\";\n            } else {\n              // if valid\n              _this2.isEmailError = false;\n            }\n          } else {\n            // error\n            _this2.isEmailError = false;\n          }\n\n          if (_this2.isEmailError) {\n            _this2.emailClass = \"errors font-italic\";\n          } else {\n            _this2.emailClass = \"d-none\";\n            _this2.emailMessage = \"\";\n          }\n        }\n\n        if (field.name == \"password\") {\n          // validate password\n          if (!field.name.valid) {\n            if (field.validity.valueMissing) {\n              _this2.isPasswordError = true;\n              _this2.passwordMessage = \"Password text does not satisfy the conditions above.\";\n            } else if (field.validity.tooLong) {\n              _this2.isPasswordError = true;\n              _this2.passwordMessage = \"Password length must be 6-12 characters\";\n            } else if (field.validity.tooShort) {\n              _this2.isPasswordError = true;\n              _this2.passwordMessage = \"Password length must be 6-12 characters\";\n            } else {\n              _this2.isPasswordError = false;\n            }\n          } else {\n            _this2.isPasswordError = false;\n          }\n\n          if (_this2.isPasswordError) {\n            _this2.passwordClass = \"errors font-italic\";\n          } else {\n            _this2.passwordClass = \"d-none\";\n            _this2.passwordMessage = \"\";\n          }\n        }\n\n        _this2.setState({\n          emailErrorClass: _this2.emailClass,\n          emailErrorMessage: _this2.emailMessage,\n          passwordErrorClass: _this2.passwordClass,\n          passwordErrorMessage: _this2.passwordMessage,\n          btnClass: _this2.state.btnClass\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.submitLoginForm,\n        noValidate: true,\n        className: \"form-sigin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"mb-4\",\n        src: \"/Logo.png\",\n        alt: \"\",\n        width: \"330\",\n        height: \"240\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: \"inputEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Email\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        ref: function ref(email) {\n          return _this3.email = email;\n        },\n        className: \"input-control\",\n        placeholder: \"Input email address\",\n        id: \"inputEmail\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: this.state.emailErrorClass,\n        id: \"emailError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.emailErrorMessage), React.createElement(\"label\", {\n        htmlFor: \"inputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Password\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        maxLength: \"12\",\n        minLength: \"6\",\n        className: \"input-control\",\n        placeholder: \"Input password\",\n        id: \"inputPassword\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: this.state.passwordErrorClass,\n        id: \"passwordError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.passwordErrorMessage), React.createElement(\"div\", {\n        className: \"checkbox mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"remember-me\",\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Remember me\"))), React.createElement(\"button\", {\n        className: this.state.btnClass,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Sign In\"));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react\\react-complete-guide\\src\\index.js"],"names":["React","Component","ReactDOM","serviceWorker","LoginForm","props","state","email","password","emailErrorClass","emailErrorMessage","passwordErrorClass","passwordErrorMessage","btnClass","emailClass","emailMessage","isEmailError","passwordClass","passwordMessage","isPasswordError","submitLoginForm","bind","e","preventDefault","fields","document","querySelectorAll","forEach","field","name","valid","validity","valueMissing","typeMismatch","tooLong","tooShort","setState","App","render","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nclass LoginForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailErrorClass: 'd-none',\n\t\t\temailErrorMessage : '',\n\t\t\t\n\t\t\tpasswordErrorClass : 'd-none',\n\t\t\tpasswordErrorMessage : '',\n\t\t\tbtnClass : 'btn btn-lg btn-signin btn-block'\n\t\t};\n\n\n\t\tthis.emailClass = \"\";\n\t\tthis.emailMessage = \"\";\n\t\tthis.isEmailError = false;\n\n\t\tthis.passwordClass = \"\";\n\t\tthis.passwordMessage = \"\";\n\t\tthis.isPasswordError = false;\n\n\t\tthis.submitLoginForm = this.submitLoginForm.bind(this);\n\t}\n\n\n\tsubmitLoginForm(e) {    \n\t\te.preventDefault();\n\n\t\tconst fields = document.querySelectorAll('input');\n\t\t\n\n\n\t\tfields.forEach(field => {\n\t\t\t\n\t\t\tif (field.name == \"email\") { // validate email\n\t\t\t\tif (!field.name.valid) {\n\t\t\t\t\tif (field.validity.valueMissing) {\n\t\t\t\t\t\t// if error\n\t\t\t\t\t\tthis.isEmailError = true;\n\t\t\t\t\t\tthis.emailMessage = \"Input form is empty\";\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (field.validity.typeMismatch) {\n\t\t\t\t\t\t// if error\n\t\t\t\t\t\tthis.isEmailError = true;\n\t\t\t\t\t\tthis.emailMessage = \"Email text isn't email form\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if valid\n\t\t\t\t\t\tthis.isEmailError = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// error\n\t\t\t\t\tthis.isEmailError = false;\n\t\t\t\t}\n\n\t\t\t\tif (this.isEmailError) {\n\t\t\t\t\tthis.emailClass = \"errors font-italic\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.emailClass = \"d-none\";\n\t\t\t\t\tthis.emailMessage = \"\";\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (field.name == \"password\") { // validate password\n\n\t\t\t\tif (!field.name.valid) {\n\t\t\t\t\tif (field.validity.valueMissing) {\n\t\t\t\t\t\tthis.isPasswordError = true;\n\t\t\t\t\t\tthis.passwordMessage = \"Password text does not satisfy the conditions above.\";\n\n\t\t\t\t\t} else if (field.validity.tooLong) {\n\t\t\t\t\t\tthis.isPasswordError = true;\n\t\t\t\t\t\tthis.passwordMessage = \"Password length must be 6-12 characters\";\n\n\t\t\t\t\t} else if (field.validity.tooShort) {\n\t\t\t\t\t\tthis.isPasswordError = true;\n\t\t\t\t\t\tthis.passwordMessage = \"Password length must be 6-12 characters\";\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.isPasswordError = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.isPasswordError = false;\n\t\t\t\t}\n\n\t\t\t\tif (this.isPasswordError) {\n\t\t\t\t\tthis.passwordClass = \"errors font-italic\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.passwordClass = \"d-none\";\n\t\t\t\t\tthis.passwordMessage = \"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\temailErrorClass: this.emailClass,\n\t\t\t\temailErrorMessage : this.emailMessage,\n\t\t\t\tpasswordErrorClass : this.passwordClass,\n\t\t\t\tpasswordErrorMessage : this.passwordMessage,\n\t\t\t\tbtnClass : this.state.btnClass\n\t\t\t});\n\t\t});\n\t}\n\n\n\trender() {\n\t\t\treturn (\n\t\t\t\t<form onSubmit={this.submitLoginForm} noValidate className=\"form-sigin\">\n\t\t\t\t\t<div className=\"text-center mb-4\">\n\t\t\t\t\t\t<img className=\"mb-4\" src=\"/Logo.png\" alt=\"\" width=\"330\" height=\"240\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label htmlFor=\"inputEmail\">\n\t\t\t\t\t\t<h6>Email</h6>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\tref={email => this.email = email} \n\t\t\t\t\t\t\tclassName=\"input-control\" \n\t\t\t\t\t\t\tplaceholder=\"Input email address\"\n\t\t\t\t\t\t\tid=\"inputEmail\"\n\t\t\t\t\t\t\trequired  \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={this.state.emailErrorClass} id=\"emailError\" >{this.state.emailErrorMessage}</p>\n\n\t\t\t\t\t<label htmlFor=\"inputPassword\">\n\t\t\t\t\t\t<h6>Password</h6>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\tmaxLength=\"12\" \n\t\t\t\t\t\t\tminLength=\"6\" \n\t\t\t\t\t\t\tclassName=\"input-control\" \n\t\t\t\t\t\t\tplaceholder=\"Input password\" \n\t\t\t\t\t\t\tid=\"inputPassword\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={this.state.passwordErrorClass} id=\"passwordError\" >{this.state.passwordErrorMessage}</p>\n\n\t\t\t\t\t<div className=\"checkbox mb-3\">\n\t\t\t\t\t\t<input type=\"checkbox\" value=\"remember-me\" className=\"checkmark\" /> \n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<h6>Remember me</h6>\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className={this.state.btnClass} type=\"submit\">Sign In</button>\n\t\t\t\t</form>\n\n\t\t\t);\n\t\t}\n\t}\n\n\tclass App extends React.Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t<LoginForm />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}