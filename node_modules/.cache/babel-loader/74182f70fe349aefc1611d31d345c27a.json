{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.submitLoginForm = _this.submitLoginForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"submitLoginForm\",\n    value: function submitLoginForm(e) {\n      e.preventDefault();\n      var fields = document.querySelectorAll('input');\n      var fieldName = \"\";\n      fields.forEach(function (field) {\n        if (field.name == \"email\") {\n          if (field.validity.valueMissing || field.validity.typeMismatch) {\n            document.getElementById(\"\".concat(field.name, \"Error\")).textContent = \"TEST\";\n          }\n        }\n        /*const isInputValid = this.InputErrors(field);\n        \tif (!isInputValid) {\n        \tisFormValid = false;\n        }*/\n\n      });\n      this.showLoginErrors();\n    }\n  }, {\n    key: \"showLoginErrors\",\n    value: function showLoginErrors() {\n      var _this2 = this;\n\n      var inputs = document.querySelectorAll('input');\n      var isFormValid = true;\n      inputs.forEach(function (input) {\n        var isInputValid = _this2.InputErrors(input);\n\n        if (!isInputValid) {\n          isFormValid = false;\n        }\n      });\n      return isFormValid;\n    }\n  }, {\n    key: \"InputErrors\",\n    value: function InputErrors(input) {\n      var name = input.name;\n      var validity = input.validity;\n      var label = document.getElementById(\"\".concat(name, \"Label\")).textContent;\n      var error = document.getElementById(\"\".concat(name, \"Error\"));\n      var isPassword = name.indexOf('password') !== -1;\n\n      if (!validity.valid) {\n        if (validity.typeMismatch) {\n          error.textContent = \"\".concat(label, \" should be a valid email address\");\n        } else if (isPassword && validity.patternMismatch) {\n          error.textContent = \"\".concat(label, \" should be longer than 8 chars\");\n        }\n\n        return false;\n      }\n\n      error.textContent = '';\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.submitLoginForm,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"emailLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        ref: function ref(email) {\n          return _this3.email = email;\n        },\n        className: \"form-control\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"error\",\n        id: \"emailError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"passwordLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        pattern: \".{9,}\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"error\",\n        id: \"passwordError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(App, _React$Component2);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react\\react-complete-guide\\src\\index.js"],"names":["React","Component","ReactDOM","serviceWorker","LoginForm","props","state","email","password","submitLoginForm","bind","e","preventDefault","fields","document","querySelectorAll","fieldName","forEach","field","name","validity","valueMissing","typeMismatch","getElementById","textContent","showLoginErrors","inputs","isFormValid","input","isInputValid","InputErrors","label","error","isPassword","indexOf","valid","patternMismatch","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\temail: '',\n\t\tpassword: ''\n    };\n    this.submitLoginForm = this.submitLoginForm.bind(this);\n  }\n\n\n\tsubmitLoginForm(e) {    \n\t\te.preventDefault();\n\n\t\tconst fields = document.querySelectorAll('input');\n\t\tconst fieldName = \"\";\n\n\t\tfields.forEach(field => {\n\n\t\t\tif (field.name == \"email\") {\n\t\t\t\tif (field.validity.valueMissing || field.validity.typeMismatch) {\n\t\t\t\t\tdocument.getElementById(`${field.name}Error`).textContent = \"TEST\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*const isInputValid = this.InputErrors(field);\n\n\t\t\tif (!isInputValid) {\n\t\t\t\tisFormValid = false;\n\t\t\t}*/\n\t\t});\n\t\tthis.showLoginErrors();\n\t}\n\n\tshowLoginErrors() {\n\t\tconst inputs = document.querySelectorAll('input');\n\t\tlet isFormValid = true;\n\n\t\tinputs.forEach(input => {\n\n\t\tconst isInputValid = this.InputErrors(input);\n\n\t\t\tif (!isInputValid) {\n\t\t\t\tisFormValid = false;\n\t\t\t}\n\t\t});\n\n\t\treturn isFormValid;\n\t}\n\n\tInputErrors(input) {\n\t\tconst name = input.name;\n\t\tconst validity = input.validity;\n\t\tconst label = document.getElementById(`${name}Label`).textContent;\n\t\tconst error = document.getElementById(`${name}Error`);\n\n\t\tconst isPassword = name.indexOf('password') !== -1;\n\n\t\tif (!validity.valid) {\n\t\t\tif (validity.typeMismatch) {\n\t\t\t\terror.textContent = `${label} should be a valid email address`; \n\t\t\t} else if (isPassword && validity.patternMismatch) {\n\t\t\t\terror.textContent = `${label} should be longer than 8 chars`; \n\t\t\t} \n\t\t\treturn false;\n\t\t}\n\n\t\terror.textContent = '';\n\t\treturn true;\n\t}\n\n\trender() {\n\t\t\treturn (\n\t\t\t<form onSubmit={this.submitLoginForm} noValidate>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label id=\"emailLabel\">Email</label>\n\t\t\t\t\t\t<input type=\"email\" name=\"email\"\n\t\t\t\t\t\t\tref={email => this.email = email}\n\t\t\t\t\t\t\tclassName=\"form-control\" required />\n\t\t\t\t\t<div className=\"error\" id=\"emailError\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label id=\"passwordLabel\">Password</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\" pattern=\".{9,}\" required />\n\t\t\t\t\t<div className=\"error\" id=\"passwordError\" />\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t\t</form>\n\t\t\t);\n\t\t}\n\t}\n\n\tclass App extends React.Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<LoginForm />\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}