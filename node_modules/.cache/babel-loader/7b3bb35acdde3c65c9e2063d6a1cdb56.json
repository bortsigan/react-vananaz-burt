{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\react-complete-guide\\\\src\\\\index.js\";\n\n/*import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"root-container\">\n\t\t\t\t<div className=\"box-controller\">\n\t\t\t\t\t<div className=\"controller\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controller\">\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</div>\n\t\t\t\t</div>  \n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass LoginBox extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tusername : '',\n\t\t\tpassword : '',\n\t\t\terror : ''\n\t\t};\n\n\t\tthis.inputUsername = this.inputUsername.bind(this);\n\t\tthis.inputPassword = this.inputPassword.bind(this);\n\t}\n\n\tinputUsername(e) {\n\t\tthis.setState({\n\t\t\tusername : e.target.value\n\t\t});\n\t}\n\n\tinputPassword(e) {\n\t\tthis.setState({\n\t\t\tpassword : e.target.value\n\t\t});\n\t}\n\n\tsubmitLogin(e) {\n\t\t\n\t}\n\n\n  \trender() {\n\n    return (\n\t\t\t<div className=\"inner-container\">\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t<input onChange={this.inputUsername} type=\"text\" name=\"username\" className=\"login-input\" placeholder=\"Username\" />\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input onChange={this.inputPassword} type=\"text\" name=\"password\" className=\"login-input\" placeholder=\"Password\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}>Login</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t    );\n\t}\t\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<LoginBox />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\nvar BasicForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasicForm, _React$Component);\n\n  function BasicForm(props) {\n    var _this;\n\n    _classCallCheck(this, BasicForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasicForm).call(this, props));\n    _this.state = {\n      username: 'jasonmalfatto@moduscreate.com',\n      password: '',\n      passwordConfirm: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BasicForm, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      e.target.classList.add('active');\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      this.showInputError(e.target);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      console.log('Component state:', JSON.stringify(this.state));\n\n      if (!this.showFormErrors()) {\n        console.log('Form is invalid: do not submit');\n      } else {\n        console.log('Form is valid: submit');\n      }\n    }\n  }, {\n    key: \"showFormErrors\",\n    value: function showFormErrors() {\n      var _this2 = this;\n\n      var inputs = document.querySelectorAll('input');\n      var isFormValid = true;\n      inputs.forEach(function (input) {\n        input.classList.add('active');\n\n        var isInputValid = _this2.showInputError(input);\n\n        if (!isInputValid) {\n          isFormValid = false;\n        }\n      });\n      return isFormValid;\n    }\n  }, {\n    key: \"showInputError\",\n    value: function showInputError(input) {\n      var name = input.name;\n      var validity = input.validity;\n      var label = document.getElementById(\"\".concat(name, \"Label\")).textContent;\n      var error = document.getElementById(\"\".concat(name, \"Error\"));\n      var isPassword = name.indexOf('password') !== -1;\n      var isPasswordConfirm = name === 'passwordConfirm';\n\n      if (isPasswordConfirm) {\n        if (this.password.value !== this.passwordConfirm.value) {\n          this.passwordConfirm.setCustomValidity('Passwords do not match');\n        } else {\n          this.passwordConfirm.setCustomValidity('');\n        }\n      }\n\n      if (!validity.valid) {\n        if (validity.valueMissing) {\n          error.textContent = \"\".concat(label, \" is a required field\");\n        } else if (validity.typeMismatch) {\n          error.textContent = \"\".concat(label, \" should be a valid email address\");\n        } else if (isPassword && validity.patternMismatch) {\n          error.textContent = \"\".concat(label, \" should be longer than 4 chars\");\n        } else if (isPasswordConfirm && validity.customError) {\n          error.textContent = 'Passwords do not match';\n        }\n\n        return false;\n      }\n\n      error.textContent = '';\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"usernameLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"username\",\n        ref: function ref(username) {\n          return _this3.username = username;\n        },\n        value: this.state.username,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"error\",\n        id: \"usernameError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"passwordLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        ref: function ref(password) {\n          return _this3.password = password;\n        },\n        value: this.state.password,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        pattern: \".{5,}\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"error\",\n        id: \"passwordError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"passwordConfirmLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirm\",\n        ref: function ref(passwordConfirm) {\n          return _this3.passwordConfirm = passwordConfirm;\n        },\n        value: this.state.passwordConfirm,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"error\",\n        id: \"passwordConfirmError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return BasicForm;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(App, _React$Component2);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(BasicForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Note: see console for submit event logging\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 226\n  },\n  __self: this\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react\\react-complete-guide\\src\\index.js"],"names":["BasicForm","props","state","username","password","passwordConfirm","handleChange","bind","handleSubmit","e","target","classList","add","setState","name","value","showInputError","preventDefault","console","log","JSON","stringify","showFormErrors","inputs","document","querySelectorAll","isFormValid","forEach","input","isInputValid","validity","label","getElementById","textContent","error","isPassword","indexOf","isPasswordConfirm","setCustomValidity","valid","valueMissing","typeMismatch","patternMismatch","customError","React","Component","App","ReactDOM","render"],"mappings":"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","sourcesContent":["/*import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"root-container\">\n\t\t\t\t<div className=\"box-controller\">\n\t\t\t\t\t<div className=\"controller\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controller\">\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</div>\n\t\t\t\t</div>  \n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass LoginBox extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tusername : '',\n\t\t\tpassword : '',\n\t\t\terror : ''\n\t\t};\n\n\t\tthis.inputUsername = this.inputUsername.bind(this);\n\t\tthis.inputPassword = this.inputPassword.bind(this);\n\t}\n\n\tinputUsername(e) {\n\t\tthis.setState({\n\t\t\tusername : e.target.value\n\t\t});\n\t}\n\n\tinputPassword(e) {\n\t\tthis.setState({\n\t\t\tpassword : e.target.value\n\t\t});\n\t}\n\n\tsubmitLogin(e) {\n\t\t\n\t}\n\n\n  \trender() {\n\n    return (\n\t\t\t<div className=\"inner-container\">\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t<input onChange={this.inputUsername} type=\"text\" name=\"username\" className=\"login-input\" placeholder=\"Username\" />\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input onChange={this.inputPassword} type=\"text\" name=\"password\" className=\"login-input\" placeholder=\"Password\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}>Login</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t    );\n\t}\t\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<LoginBox />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\nclass BasicForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: 'jasonmalfatto@moduscreate.com',\n      password: '',\n      passwordConfirm: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.target.classList.add('active');\n\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.showInputError(e.target);\n  }\n\n  handleSubmit(e) {    \n    e.preventDefault();\n\n    console.log('Component state:', JSON.stringify(this.state));\n\n    if (!this.showFormErrors()) {\n      console.log('Form is invalid: do not submit');\n    } else {\n      console.log('Form is valid: submit');\n    }\n  }\n\n  showFormErrors() {\n    const inputs = document.querySelectorAll('input');\n    let isFormValid = true;\n\n    inputs.forEach(input => {\n      input.classList.add('active');\n\n      const isInputValid = this.showInputError(input);\n\n      if (!isInputValid) {\n        isFormValid = false;\n      }\n    });\n\n    return isFormValid;\n  }\n\n  showInputError(input) {\n    const name = input.name;\n    const validity = input.validity;\n    const label = document.getElementById(`${name}Label`).textContent;\n    const error = document.getElementById(`${name}Error`);\n\n    const isPassword = name.indexOf('password') !== -1;\n    const isPasswordConfirm = name === 'passwordConfirm';\n    if (isPasswordConfirm) {\n      if (this.password.value !== this.passwordConfirm.value) {\n        this.passwordConfirm.setCustomValidity('Passwords do not match');\n      } else {\n        this.passwordConfirm.setCustomValidity('');\n      }\n    }\n\n    if (!validity.valid) {\n      if (validity.valueMissing) {\n        error.textContent = `${label} is a required field`; \n      } else if (validity.typeMismatch) {\n        error.textContent = `${label} should be a valid email address`; \n      } else if (isPassword && validity.patternMismatch) {\n        error.textContent = `${label} should be longer than 4 chars`; \n      } else if (isPasswordConfirm && validity.customError) {\n        error.textContent = 'Passwords do not match';\n      }\n      return false;\n    }\n\n    error.textContent = '';\n    return true;\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} noValidate>\n        <div className=\"form-group\">\n          <label id=\"usernameLabel\">Username</label>\n          <input type=\"email\" name=\"username\"\n                 ref={username => this.username = username}\n                 value={this.state.username} onChange={this.handleChange}\n                 className=\"form-control\" required />\n          <div className=\"error\" id=\"usernameError\" />\n        </div>\n\n        <div className=\"form-group\">\n          <label id=\"passwordLabel\">Password</label>\n          <input type=\"password\" name=\"password\"\n                 ref={password => this.password = password}\n                 value={this.state.password} onChange={this.handleChange}\n                 className=\"form-control\" pattern=\".{5,}\" required />\n          <div className=\"error\" id=\"passwordError\" />\n        </div>\n\n        <div className=\"form-group\">\n          <label id=\"passwordConfirmLabel\">Confirm Password</label>\n          <input type=\"password\" name=\"passwordConfirm\"\n                 ref={passwordConfirm => this.passwordConfirm = passwordConfirm}\n                 value={this.state.passwordConfirm} onChange={this.handleChange}\n                 className=\"form-control\" required />\n          <div className=\"error\" id=\"passwordConfirmError\" />\n        </div>\n\n        <button className=\"btn btn-primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <BasicForm />\n        <p className=\"note\">Note: see console for submit event logging</p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}